<?xml version="1.0" encoding="utf-8"?>
<project name="project" default="all" >

	<!-- ソースディレクトリ -->
	<property name="src" value="./src" />

	<!-- ベンダーディレクトリ -->
	<property name="vendor" value="../vendor" />

	<!-- JsDoc Toolkit ホーム -->
	<property name="jsdoc.home" value="${vendor}/jsdoc-toolkit/" />

	<!-- タスク定義 -->
	<path id="jsdoc.classpath" >
		<fileset file="${vendor}/jsdoc-toolkit-ant-task/jsdoc-toolkit-ant-task-current.jar" />
		<fileset file="${jsdoc.home}java/classes/js.jar" />
	</path>
	<taskdef name="jsdoctoolkit"
	         classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit"
	         classpathref="jsdoc.classpath"
	/>

	<!-- deps.js のビルド -->
	<target name="deps" description="依存関係を解決する deps.js を作成する" >
		<exec dir="${src}" executable="python" failonerror="true">
			<arg line="../${vendor}/closure-library/closure-library-current/closure/bin/build/depswriter.py" />
			<arg line="--root_with_prefix=&quot;app ../../../../../trunk/src/app&quot;" />
			<arg line="--output_file=deps.js " />
		</exec>
	</target>

	<!-- combine.js のビルド -->
	<target name="combine" description="利用するJavaScriptファイルを全てまとめて combine.js を作成する" >
		<exec dir="${src}" executable="python" failonerror="true">
			<arg line="../${vendor}/closure-library/closure-library-current/closure/bin/build/closurebuilder.py" />
			<arg line="--root=../${vendor}/closure-library/closure-library-current" />
			<arg line="--root=app" />
			<arg line="--namespace=application.Diceros.Main" />
			<arg line="--output_mode=script" />
			<arg line="--output_file=combine.js" />
		</exec>
	</target>

	<!-- デバッグ版のビルド -->
	<target name="debug" description="デバッグ版のファイル debug.js を作成する" >
		<exec dir="${src}" executable="python" failonerror="true">
			<arg line="../${vendor}/closure-library/closure-library-current/closure/bin/build/closurebuilder.py" />
			<arg line="-c ../${vendor}/closure-compiler/compiler-current.jar" />
			<arg line="-f &quot;--compilation_level=ADVANCED_OPTIMIZATIONS&quot;" />
			<arg line="-f &quot;--externs=app/externs.js&quot;" />
			<arg line="--root=../${vendor}/closure-library/closure-library-current" />
			<arg line="--root=app" />
			<arg line="--namespace=application.Diceros.Main" />
			<arg line="-o compiled" />
			<arg line="--output_file=release.js" />
		</exec>
	</target>

	<!-- リリース版のビルド -->
	<target name="release" description="リリース版のファイル release.js を作成する" >
		<exec dir="${src}" executable="python" failonerror="true">
			<arg line="../${vendor}/closure-library/closure-library-current/closure/bin/build/closurebuilder.py" />
			<arg line="-c ../${vendor}/closure-compiler/compiler-current.jar" />
			<arg line="-f &quot;--compilation_level=ADVANCED_OPTIMIZATIONS&quot;" />
			<arg line="-f &quot;--externs=app/externs.js&quot;" />
			<arg line="-f &quot;--define=goog.DEBUG=false&quot;" />
			<arg line="--root=../${vendor}/closure-library/closure-library-current" />
			<arg line="--root=app" />
			<arg line="--namespace=application.Diceros.Main" />
			<arg line="-o compiled" />
			<arg line="--output_file=release.js" />
		</exec>
	</target>


	<!-- ドキュメントを作成 -->
	<target name="document" description="ドキュメントを作成" >
		<jsdoctoolkit jsdochome="${jsdoc.home}"
		              template="outline"
		              encoding="utf-8"
		              includeundocumented="false"
		              verbose="false"
		              outputdir="./doc/">
			<fileset dir="./src/app/" />
			<arg name="title" value="サンプル APIドキュメント" />
		</jsdoctoolkit>
	</target>

	<!-- 全て作成 -->
	<target name="all" depends="deps,combine,debug,release,document"></target>

	<!--  削除 -->
	<target name="clean">
		<delete file="${src}/deps.js" />
		<delete file="${src}/combine.js" />
		<delete file="${src}/debug.js" />
		<delete file="${src}/release.js" />
		<delete dir="./doc" />
	</target>

	<!-- リビルド -->
	<target name="rebuild" depends="clean,all"></target>
</project>
